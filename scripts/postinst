#!/bin/sh
set -e


export NOMAD_SHARE_DIR="/var/packages/$SYNOPKG_PKGNAME/shares/nomad"
mkdir -p "${NOMAD_SHARE_DIR}/var/log/nomad"
LOG_FILE="${NOMAD_SHARE_DIR}/var/log/nomad/install.log"

NOMAD_EXE="/var/packages/nomad/target/bin/nomad"

echo "$(date --iso-8601=second) Starting postinst with: NOMAD_SHARE_DIR=${NOMAD_SHARE_DIR}" >${LOG_FILE}
echo "$(env)" >>${LOG_FILE}

if [ "$SYNOPKG_PKG_STATUS" = "INSTALL" ]; then
  echo "$(date --iso-8601=second) Installing Nomad" >>${LOG_FILE}

  echo "$(date --iso-8601=second) Creating /var/packages/nomad/var/env.sh" >>${LOG_FILE}
  mkdir -p /var/packages/nomad/var
  echo "export NOMAD_SHARE_DIR=\"$NOMAD_SHARE_DIR\"" >/var/packages/nomad/var/env.sh

  echo "$(date --iso-8601=second) Creating ${NOMAD_SHARE_DIR}/etc/nomad.d" >>${LOG_FILE}
  mkdir -p "${NOMAD_SHARE_DIR}/etc/nomad.d"

  rm -rf "${NOMAD_SHARE_DIR}/etc/certs"
  if [ ! -d "${NOMAD_SHARE_DIR}/etc/certs" ]; then
    echo "$(date --iso-8601=second) Creating ${NOMAD_SHARE_DIR}/etc/certs" >>${LOG_FILE}
    mkdir -p "${NOMAD_SHARE_DIR}/etc/certs"
    cd "${NOMAD_SHARE_DIR}/etc/certs"
    echo "$(date --iso-8601=second) Creating nomad ca create" >>${LOG_FILE}
    $NOMAD_EXE tls ca create
    echo "$(date --iso-8601=second) Creating nomad server cert" >>${LOG_FILE}
    $NOMAD_EXE tls cert create -server -cluster-region ${pkgwizard_nomad_region}
    echo "$(date --iso-8601=second) Creating nomad cli cert" >>${LOG_FILE}
    $NOMAD_EXE tls cert create -cli -cluster-region=${pkgwizard_nomad_region}
    cd -
  else
    echo "$(date --iso-8601=second) Skip creating certs" >>${LOG_FILE}
  fi

  echo "$(date --iso-8601=second) Creating ${NOMAD_SHARE_DIR}/var/lib/nomad" >>${LOG_FILE}
  mkdir -p "${NOMAD_SHARE_DIR}/var/lib/nomad"

  NOMAD_CONFIG_FILE="${NOMAD_SHARE_DIR}/etc/nomad.d/nomad.hcl"
  rm -rf ${NOMAD_CONFIG_FILE}

  if [ ! -f "${NOMAD_CONFIG_FILE}" ]; then
    echo "$(date --iso-8601=second) Creating ${NOMAD_CONFIG_FILE}" >>${LOG_FILE}

    cat <<EOF > "${NOMAD_CONFIG_FILE}"
datacenter="${pkgwizard_nomad_datacenter}"
region="${pkgwizard_nomad_region}"
data_dir="${NOMAD_SHARE_DIR}/var/lib/nomad"
server {
  enabled = true
  bootstrap_expect = 1
}
client {
  enabled = true
}
ports {
  http = ${pkgwizard_nomad_web_ui_port}
}
tls {
  http = true
  rpc = true

  ca_file = "${NOMAD_SHARE_DIR}/etc/certs/nomad-agent-ca.pem"
  cert_file = "${NOMAD_SHARE_DIR}/etc/certs/${pkgwizard_nomad_region}-server-nomad.pem"
  key_file = "${NOMAD_SHARE_DIR}/etc/certs/${pkgwizard_nomad_region}-server-nomad-key.pem"

  verify_server_hostname=false
  verify_https_client=true
}
acl {
  enabled = true
}
plugin "raw_exec" {
  config {
    enabled = true
  }
}
plugin "docker" {
  config {
    allow_privileged = true
    volumes {
      # required for bind mounting host directories
      enabled = true
    }
  }
}
EOF
  else
    echo "$(date --iso-8601=second) Skip creating ${NOMAD_CONFIG_FILE} due to existing file." >>${LOG_FILE}
  fi
fi

  echo "$(date --iso-8601=second) Creating ${NOMAD_SHARE_DIR}/env" >>${LOG_FILE}
  cat <<EOF > "${NOMAD_SHARE_DIR}/env"
export NOMAD_ADDR="https://${pkgwizard_ip}:${pkgwizard_nomad_web_ui_port}"
export NOMAD_CLIENT_CERT="${NOMAD_SHARE_DIR}/etc/certs/${pkgwizard_nomad_region}-cli-nomad.pem"
export NOMAD_CLIENT_KEY="${NOMAD_SHARE_DIR}/etc/certs/${pkgwizard_nomad_region}-cli-nomad-key.pem"
EOF

exit 0
